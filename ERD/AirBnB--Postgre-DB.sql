CREATE TABLE "users" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "username" varchar(100) UNIQUE NOT NULL,
  "email" varchar(255) UNIQUE NOT NULL,
  "password_hash" text NOT NULL,
  "is_host" boolean DEFAULT false,
  "created_at" timestamp DEFAULT (now())
);

CREATE TABLE properties (
    id SERIAL PRIMARY KEY,
    title VARCHAR(255),
    description TEXT,
    address VARCHAR(255),
    city VARCHAR(100),
    country VARCHAR(100),
    price_per_night DECIMAL(10,2),
    host_id INTEGER REFERENCES users(id),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    is_active BOOLEAN DEFAULT TRUE,
    deleted_at TIMESTAMP
);

CREATE TABLE booking_status (
    id SERIAL PRIMARY KEY,
    status_name VARCHAR(50) UNIQUE
);

INSERT INTO booking_status (status_name) VALUES
('pending'), ('confirmed'), ('cancelled');

CREATE TABLE bookings (
    id SERIAL PRIMARY KEY,
    user_id INTEGER REFERENCES users(id),
    property_id INTEGER REFERENCES properties(id),
    start_date DATE,
    end_date DATE,
    status_id INTEGER REFERENCES booking_status(id),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    is_active BOOLEAN DEFAULT TRUE,
    deleted_at TIMESTAMP
);


CREATE TABLE payment_status (
    id SERIAL PRIMARY KEY,
    status_name VARCHAR(50) UNIQUE
);

INSERT INTO payment_status (status_name) VALUES
('success'), ('failed');

CREATE TABLE payments (
    id SERIAL PRIMARY KEY,
    booking_id INTEGER REFERENCES bookings(id),
    amount DECIMAL(10,2),
    payment_method VARCHAR(100),
    status_id INTEGER REFERENCES payment_status(id),
    paid_at TIMESTAMP,
    is_active BOOLEAN DEFAULT TRUE,
    deleted_at TIMESTAMP
);


CREATE TABLE reviews (
    id SERIAL PRIMARY KEY,
    user_id INTEGER REFERENCES users(id),
    property_id INTEGER REFERENCES properties(id),
    rating INTEGER,
    comment TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    is_active BOOLEAN DEFAULT TRUE,
    deleted_at TIMESTAMP
);


COMMENT ON TABLE booking_status IS 'Lookup table for booking statuses: pending, confirmed, cancelled';

COMMENT ON TABLE payment_status IS 'Lookup table for payment statuses: success, failed';

COMMENT ON COLUMN bookings.status_id IS 'FK to booking_status(id)';

COMMENT ON COLUMN payments.status_id IS 'FK to payment_status(id)';

COMMENT ON COLUMN "reviews"."rating" IS '1 to 5';

ALTER TABLE "properties" ADD FOREIGN KEY ("host_id") REFERENCES "users" ("id");

ALTER TABLE "bookings" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("id");

ALTER TABLE "bookings" ADD FOREIGN KEY ("property_id") REFERENCES "properties" ("id");

ALTER TABLE "payments" ADD FOREIGN KEY ("booking_id") REFERENCES "bookings" ("id");

ALTER TABLE "reviews" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("id");

ALTER TABLE "reviews" ADD FOREIGN KEY ("property_id") REFERENCES "properties" ("id");
